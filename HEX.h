#ifndef LIBSODIUM_HEX_H
#define LIBSODIUM_HEX_H

#include "INT.h"

con ok64 HEXnoroom = 0x113a1cb3db3cf1;
con ok64 HEXbad = 0x44e866968;

$u8 BASE16 = $u8str("0123456789abcdef");

fun ok64 HEXfeed($u8 hex, $u8c bin) {
    if ($len(bin) * 2 > $len(hex)) return HEXnoroom;
    while (!$empty(bin)) {
        **hex = $at(BASE16, **bin >> 4);
        ++*hex;
        **hex = $at(BASE16, **bin & 0xf);
        ++*hex;
        ++*bin;
    }
    return OK;
}

fun ok64 HEXput($u8 hex, $cu8c bin) {
    a$dup(u8c, copy, bin);
    return HEXfeed(hex, copy);
}

const u8 BASE16rev[256] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0x0,  0x1,  0x2,  0x3,  0x4,  0x5,  0x6,  0x7,  0x8,  0x9,  0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xa,  0xb,  0xc,  0xd,  0xe,  0xf,  0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xa,  0xb,  0xc,  0xd,  0xe,  0xf,  0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff,
};

fun ok64 HEXdrain($u8c hex, $u8 bin) {
    if ($len(bin) < $len(hex) / 2) return HEXnoroom;
    if ($len(hex) & 1) return HEXbad;
    while (!$empty(hex)) {
        u8 u = BASE16rev[**hex];
        if (u == 0xff) return HEXbad;
        ++*hex;
        u8 l = BASE16rev[**hex];
        if (l == 0xff) return HEXbad;
        ++*hex;
        **bin = (u << 4) | l;
        ++*bin;
    }
    return OK;
}

#endif
